@{
    Layout = null;
    double totalAmount = 0;
    int index = 0;
    double totalMoney = 0;
    var province = Model.ConsigneeAddressDetail.Split(",")[0].Trim();
    var district = Model.ConsigneeAddressDetail.Split(",")[1].Trim();
    var orderDate = Model.OrderDate;
    var formattedOrderDate = orderDate.ToString("yyyy-MM-dd");
}

@using PetStoreProject.ViewModels;
@model CheckoutViewModel;

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

<style>
    #form_info_order, #money_order {
        border: 1px solid;
        border-color: #dee2e6;
        margin-bottom: 10px;
    }

    .border_radi {
        border-radius: 10px;
    }

    .text-top {
        vertical-align: top;
    }

    .text_center {
        text-align: center;
    }

    .text-right {
        text-align: right;
    }

    .margin_btt {
        margin-bottom: 10px;
    }

    .margin_0px {
        margin: 0px;
    }

    .margin_10px_0px {
        margin: 10px 0px;
    }

    .border_1px {
        border: 1px solid;
        border-color: #dee2e6;
    }

    .padding_10px {
        padding: 10px !important;
    }

    .text-truncate {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: wrap;
    }

    .radio-buttons {
        display: -webkit-box;
        display: -moz-box;
        display: -ms-flexbox;
        display: -webkit-flex;
        display: flex;
        gap: 10px;
    }

        .radio-buttons .item {
            position: relative;
        }

            .radio-buttons .item label {
                width: max-content;
                height: 36px;
                cursor: pointer;
                display: -webkit-box;
                display: -moz-box;
                display: -ms-flexbox;
                display: -webkit-flex;
                display: flex;
                align-items: center;
                justify-content: end;
                padding: 6px 10px 6px 38px;
                gap: 6px;
                border-radius: 1000px;
                background: #F0F5F9;
                -webkit-transition: all 0.3s ease;
                -moz-transition: all 0.3s ease;
                -ms-transition: all 0.3s ease;
                -o-transition: all 0.3s ease;
                transition: all 0.3s ease;
            }

                .radio-buttons .item label div {
                    -webkit-transition: all 0.3s ease;
                    -moz-transition: all 0.3s ease;
                    -ms-transition: all 0.3s ease;
                    -o-transition: all 0.3s ease;
                    transition: all 0.3s ease;
                }

            .radio-buttons .item div {
                color: #575864;
            }

            .radio-buttons .item input {
                position: absolute;
                top: 6px;
                left: 8px;
                width: 24px;
                height: 24px;
                border: 1px solid #ECF0F4;
            }

                .radio-buttons .item input:checked::before {
                    position: absolute;
                    content: "\e931";
                    font-family: "icomoon";
                    width: 24px;
                    height: 24px;
                    font-size: 14px;
                    color: #2377FC;
                    border-radius: 50%;
                    background-color: #fff;
                    display: -webkit-box;
                    display: -moz-box;
                    display: -ms-flexbox;
                    display: -webkit-flex;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    -webkit-transition: all 0.3s ease;
                    -moz-transition: all 0.3s ease;
                    -ms-transition: all 0.3s ease;
                    -o-transition: all 0.3s ease;
                    transition: all 0.3s ease;
                }

                .radio-buttons .item input:checked ~ label {
                    background-color: #2377FC;
                }

                    .radio-buttons .item input:checked ~ label * {
                        color: #fff;
                    }

                .radio-buttons .item input:checked > .item {
                    background: #2377FC;
                }

    .upload-image .item.up-load {
        min-height: 165px;
    }

    .upload-image .item img {
        height: 155px;
    }

    #preview-image {
        overflow-x: auto;
        min-height: 160px;
    }

        #preview-image .item {
            position: relative;
            min-width: 25%;
        }


    .upload-image {
        display: -webkit-box;
        display: -moz-box;
        display: -ms-flexbox;
        display: -webkit-flex;
        display: flex;
        gap: 10px;
    }

        .upload-image .item {
            display: -webkit-box;
            display: -moz-box;
            display: -ms-flexbox;
            display: -webkit-flex;
            display: flex;
            align-items: center;
            justify-content: center;
            width: 100%;
            border-radius: 12px;
            border: 1px solid var(--Input);
        }

            .upload-image .item img {
                height: 180px;
            }

            .upload-image .item.up-load {
                min-height: 208px;
                border: 1px dashed var(--Main);
            }

        .upload-image .uploadfile {
            text-align: center;
            width: 100%;
            height: 100%;
            position: relative;
            cursor: pointer;
            display: -webkit-box;
            display: -moz-box;
            display: -ms-flexbox;
            display: -webkit-flex;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            flex-direction: column;
        }

            .upload-image .uploadfile .icon {
                font-size: 40px;
                color: var(--Main);
            }

            .upload-image .uploadfile .text-tiny {
                width: 100%;
                max-width: 177px;
                margin-right: auto;
                margin-left: auto;
            }

            .upload-image .uploadfile input {
                position: absolute;
                opacity: 0;
                visibility: hidden;
            }

        .upload-image.style-1 {
            flex-wrap: wrap;
        }

            .upload-image.style-1 .item {
                width: 48%;
            }

                .upload-image.style-1 .item img {
                    height: 132px;
                }

                .upload-image.style-1 .item.up-load {
                    min-height: 134px;
                    padding: 0 30px;
                }

        .upload-image.style-2 .item img {
            height: 218px;
        }

        .upload-image.style-2 .item.up-load {
            min-height: 220px;
            padding: 0 30px;
        }

    .btn-remove {
        position: absolute;
        top: 0px;
        left: 66px;
    }
</style>

<div class="modal-header" id="modal-header-style">
    <h4 class="modal-title">Chi tiết đơn hàng</h4>
    <button type="button" class="close" data-dismiss="modal" style="font-size:20px; background: none; border: none" onclick="CloseDetail()">&times;</button>
</div>
<!-- Modal Body -->
<div class="modal-body" id="modal-body-orderDetail">
    <form id="order-detail-body">
        <div class="row margin_10px_0px padding_10px" id="form_info_order">
            <div class="form-group col-xl-6">
                <h5 class="text-decoration-underline">Thông tin đặt hàng</h5>
                <input type="hidden" value="@Model.OrderId" id="orderId" />
                <div class="row">
                    <div class="col-xl-4"><strong>Người đặt</strong></div>
                    <div class="col-xl-8">@Model.OrderName</div>
                </div>
                <div class="row">
                    <div class="col-xl-4"><strong>SĐT đặt</strong></div>
                    <div class="col-xl-8">@Model.OrderPhone</div>
                </div>
                <div class="row">
                    <div class="col-xl-4"><strong>Email đặt</strong></div>
                    <div class="col-xl-8">
                        @if (!string.IsNullOrEmpty(Model.OrderEmail))
                        {
                            <span>@Model.OrderEmail</span>
                        }
                        else
                        {
                            <span>Trống!</span>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-xl-4"><strong>Ngày đặt</strong></div>
                    <div class="col-xl-8">@Model.OrderDate.ToString("dd/MM/yyyy")</div>
                </div>
            </div>
            <div class="form-group col-xl-6">
                <h5 class="text-decoration-underline">Thông tin nhận hàng</h5>
                <div class="row">
                    <div class="col-xl-4"><strong>Người nhận</strong></div>
                    <div class="col-xl-8">@Model.ConsigneeName</div>
                </div>
                <div class="row">
                    <div class="col-xl-4"><strong>SĐT nhận</strong></div>
                    <div class="col-xl-8">@Model.ConsigneePhone</div>
                </div>
                <div class="row">
                    <div class="col-xl-4"><strong>Địa chỉ</strong></div>
                    <div class="col-xl-8">@Model.ConsigneeAddressDetail</div>
                </div>
            </div>
        </div>
    </form>

    <div class="row margin_btt">
        <div class="">
            <table class="table table-centered mb-0 table-nowrap border_1px" style="padding: 0px">
                @if (ViewBag.listItemOrder != null && ViewBag.listItemOrder.Count > 0)
                {
                    <thead>
                        <tr>
                            <th class="border-top-0" style="width: 90px;" scope="col">Sản phẩm</th>
                            <th class="border-top-0" style="width: 500px" scope="col">Mô tả sản phẩm</th>
                            <th class="border-top-0" scope="col">Giá</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var itemCart in ViewBag.listItemOrder)
                        {
                            double amount = 0;
                            var price = itemCart.Price;
                            if (itemCart.Promotion != null)
                            {
                                price *= (1 - (float)itemCart.Promotion.Value / 100);
                            }
                            amount = price * itemCart.Quantity;
                            totalAmount += amount;

                            if (index > 1)
                            {
                                <tr id="display_product_@index" style="display: none">
                                    <td scope="row"><img src="@itemCart.ImgUrl.Trim()" alt="Hình ảnh sản phẩm" title="product-img" class="avatar-lg rounded"></td>
                                    <td class="text-top">
                                        <h7 class="font-size-16 text-truncate"><a href="/product/detail/@itemCart.ProductId" class="text-dark">@itemCart.Name</a></h7>
                                        <h8 class="font-size-16 text-truncate">@itemCart.Option</h8>
                                        <p class="text-muted mb-0">
                                            <i class="bx bxs-star text-warning"></i>
                                            <i class="bx bxs-star text-warning"></i>
                                            <i class="bx bxs-star text-warning"></i>
                                            <i class="bx bxs-star text-warning"></i>
                                            <i class="bx bxs-star-half text-warning"></i>
                                        </p>
                                        <p class="text-muted mb-0 mt-1">@price.ToString("#,###") VND x @itemCart.Quantity</p>
                                        @if (itemCart.Promotion != null)
                                        {
                                            <del class="text-muted mb-0 mt-1">@itemCart.Price.ToString("#,###") VND x @itemCart.Quantity</del>
                                        }
                                        <input type="hidden" value="@itemCart.ProductOptionId" id="product_productOptionId_@index" />
                                        <input type="hidden" value="@itemCart.Price" id="product_price_@index" />
                                        <input type="hidden" value="@itemCart.Quantity" id="product_quantity_@index" />
                                    </td>
                                    <td class="text-center"><p class="float_r margin_auto">@amount.ToString("#,###") VND</p></td>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <td scope="row"><img src="@itemCart.ImgUrl.Trim()" alt="Hình ảnh sản phẩm" title="product-img" class="avatar-lg rounded"></td>
                                    <td class="text-top">
                                        <h7 class="font-size-16 text-truncate"><a href="/product/detail/@itemCart.ProductId" class="text-dark">@itemCart.Name</a></h7>
                                        <h8 class="font-size-16 text-truncate">@itemCart.Option</h8>
                                        <p class="text-muted mb-0">
                                            <i class="bx bxs-star text-warning"></i>
                                            <i class="bx bxs-star text-warning"></i>
                                            <i class="bx bxs-star text-warning"></i>
                                            <i class="bx bxs-star text-warning"></i>
                                            <i class="bx bxs-star-half text-warning"></i>
                                        </p>
                                        <p class="text-muted mb-0 mt-1">@price.ToString("#,###") VND x @itemCart.Quantity</p>
                                        @if (itemCart.Promotion != null)
                                        {
                                            <del class="text-muted mb-0 mt-1">@itemCart.Price.ToString("#,###") VND x @itemCart.Quantity</del>
                                        }
                                        <input type="hidden" value="@itemCart.ProductOptionId" id="product_productOptionId_@index" />
                                        <input type="hidden" value="@itemCart.Price" id="product_price_@index" />
                                        <input type="hidden" value="@itemCart.Quantity" id="product_quantity_@index" />
                                    </td>
                                    <td class="text-center"><p class="float_r margin_auto">@amount.ToString("#,###") VND</p></td>
                                </tr>
                            }
                            totalMoney = totalAmount;
                            index++;
                        }
                        <input type="hidden" value="@index" id="product_index" />
                        <input type="hidden" value="1" id="products_null" />
                    </tbody>
                }
                else
                {
                    <thead>
                        <p class="text-center">Danh sách sản phẩm hiện trống!</p>
                    </thead>
                    <input type="hidden" value="0" id="products_null" />
                }
            </table>
        </div>
        @if (ViewBag.listItemOrder != null && ViewBag.listItemOrder.Count > 2)
        {
            <div onclick="AddViewItem()" class="text_center margin_auto padding_t addView_style"><button type="button" id="selectViewItem" style="border:none; background: none">Xem thêm</button></div>
        }
    </div>

    <div class="row border_radi margin_0px padding_10px" id="money_order">
        <div class="row">
            <div class="form-group col-xl-8">
                <span>Tổng tiền:</span>
            </div>
            <div class="form-group col-xl-4 text-right">@totalAmount.ToString("#,###")VND</div>
        </div>
        <div class="row">
            <div class="form-group col-xl-8">
                <span class="margin_0px">Mã giảm giá:</span>
            </div>
            @if (ViewBag.priceDiscount != null && ViewBag.priceDiscount != 0)
            {
                totalMoney = totalAmount - ViewBag.priceDiscount;
                <div class="form-group col-xl-4 text-right">- @ViewBag.priceDiscount.ToString("#,###")VND</div>
            }
            else
            {
                <div class="form-group col-xl-4 text-right">- 0VND</div>
            }
        </div>
        <div class="row">
            <div class="form-group col-xl-8">
                <span>Phí vận chuyển:</span>
            </div>
            @if (Model.ShippingFee != 0)
            {
                totalMoney = totalMoney + Model.ShippingFee;
                <div class="form-group col-xl-4 text-right">+ @Model.ShippingFee.ToString("#,###")VND</div>
            }
            else
            {
                <div class="form-group col-xl-4 text-right">+ 0VND</div>
            }
        </div>
        <div class="row">
            <div class="form-group col-xl-8">
                <strong>Thành tiền:</strong>
            </div>
            <div class="form-group col-xl-4 text-right"><strong>@totalMoney.ToString("#,###")VND</strong></div>
        </div>
    </div>
    <div class="row" id="radio-button-@Model.OrderId">
        <div class="flex items-center gap10 flex-wrap">
            <div class="radio-buttons">
                <input type="hidden" value="@Model.Status" id="statusOrder" />
                <input type="hidden" value="@Model.OrderDate.ToString("yyyy-MM-dd")" id="orderDateTime" />
                @if(province.Contains("Hà Nội") && district.Contains("Quận"))
                {
                    if(Model.PaymentMethod == "COD" && Model.Status != "Chờ giao hàng" && Model.Status != "Đã giao hàng")
                    {
                        <div class="item">
                            <input type="radio" name="admin-language" value="Đã hủy" id="admin-language7"
                            @(Model.Status == "Đã hủy" ? "checked" : "")
                            @(Model.Status == "Đã hoàn thành" || Model.Status == "Trả hàng" || Model.Status == "Đã hủy" || Model.Status == "Đã giao hàng" || Model.Status == "Chờ giao hàng" ? "disabled" : "")>
                            <label for="admin-language7"><span class="body-title-2">Hủy đơn hàng</span></label>
                        </div>

                        <div class="item">
                            <input type="radio" name="admin-language" value="Chờ xác nhận" id="admin-language1" readonly
                            @(Model.Status == "Chờ xác nhận" ? "checked" : "") disabled="" />

                            <label for="admin-language1"><span class="body-title-2">Chờ xác nhận</span></label>
                        </div>
                    }
                    <div class="item">
                        <input type="radio" name="admin-language" value="Chờ lấy hàng" id="admin-language2" readonly
                        @(Model.Status == "Chờ lấy hàng" ? "checked" : "") disabled="" />
                        <label for="admin-language2"><span class="body-title-2">Chờ lấy hàng</span></label>
                    </div>
                    <div class="item">
                        <input type="radio" name="admin-language" value="Chờ giao hàng" id="admin-language3" readonly
                        @(Model.Status == "Chờ giao hàng" ? "checked" : "") disabled="" />
                        <label for="admin-language3"><span class="body-title-2">Chờ giao hàng</span></label>
                    </div>
@*                     @if(Model.Status == "Chờ lấy hàng")
                    {
                        <div class="item">
                            <input type="radio" name="admin-language" value="Đã giao hàng" id="admin-language4" readonly
                            @(Model.Status == "Đã giao hàng" ? "checked" : "") disabled="">
                            <label for="admin-language4"><span class="body-title-2">Đã giao hàng</span></label>
                        </div>
                        <div class="item">
                            <input type="radio" name="admin-language" value="Trả hàng" id="admin-language5"
                            @(Model.Status == "Trả hàng" ? "checked" : "") disabled=""
                            @(Model.Status == "Đã hoàn thành" ? "disabled" : "")>
                            <label for="admin-language5"><span class="body-title-2">Trả hàng</span></label>
                        </div>
                        <div class="item">
                            <input type="radio" name="admin-language" value="Đã hoàn thành" id="admin-language6"
                            @(Model.Status == "Đã hoàn thành" ? "checked" : "") disabled=""
                            @(Model.Status == "Trả hàng" ? "disabled" : "")>
                            <label for="admin-language6"><span class="body-title-2">Hoàn thành</span></label>
                        </div>
                    } *@
                    @if(Model.Status == "Chờ giao hàng")
                    {
                        <div class="item">
                            <input type="radio" name="admin-language" value="Đã giao hàng" id="admin-language4" readonly
                            @(Model.Status == "Đã giao hàng" ? "checked" : "") disabled="">
                            <label for="admin-language4"><span class="body-title-2">Đã giao hàng</span></label>
                        </div>
                        <div class="item">
                            <input type="radio" name="admin-language" value="Trả hàng" id="admin-language5"
                            @(Model.Status == "Trả hàng" ? "checked" : "") disabled=""
                            @(Model.Status == "Đã hoàn thành" ? "disabled" : "")>
                            <label for="admin-language5"><span class="body-title-2">Trả hàng</span></label>
                        </div>
                        <div class="item">
                            <input type="radio" name="admin-language" value="Đã hoàn thành" id="admin-language6"
                            @(Model.Status == "Đã hoàn thành" ? "checked" : "") disabled =""
                            @(Model.Status == "Trả hàng" ? "disabled" : "")>
                            <label for="admin-language6"><span class="body-title-2">Hoàn thành</span></label>
                        </div>
                    }
                    @if(Model.Status == "Đã giao hàng")
                    {
                        <div class="item">
                            <input type="radio" name="admin-language" value="Đã giao hàng" id="admin-language4" readonly
                            @(Model.Status == "Đã giao hàng" ? "checked" : "") disabled="">
                            <label for="admin-language4"><span class="body-title-2">Đã giao hàng</span></label>
                        </div>
                        <div class="item">
                            <input type="radio" name="admin-language" value="Trả hàng" id="admin-language5"
                            @(Model.Status == "Trả hàng" ? "checked" : "")
                            @(Model.Status == "Đã hoàn thành" ? "disabled" : "")>
                            <label for="admin-language5"><span class="body-title-2">Trả hàng</span></label>
                        </div>
                        <div class="item">
                            <input type="radio" name="admin-language" value="Đã hoàn thành" id="admin-language6"
                            @(Model.Status == "Đã hoàn thành" ? "checked" : "")
                            @(Model.Status == "Trả hàng" ? "disabled" : "")>
                            <label for="admin-language6"><span class="body-title-2">Hoàn thành</span></label>
                        </div>
                    }
                }else
                {
                    <div class="item">
                        <input type="radio" name="admin-language" value="Chờ lấy hàng" id="admin-language2"
                        @(Model.Status == "Chờ lấy hàng" ? "checked" : "") disabled="" >
                        <label for="admin-language2"><span class="body-title-2">Chờ lấy hàng</span></label>
                    </div>
                    <div class="item">
                        <input type="radio" name="admin-language" value="Trả hàng" id="admin-language5"
                        @(Model.Status == "Trả hàng" ? "checked" : "")
                        @(Model.Status == "Đã hoàn thành" ? "disabled" : "")>
                        <label for="admin-language5"><span class="body-title-2">Trả hàng</span></label>
                    </div>
                    <div class="item">
                        <input type="radio" name="admin-language" value="Đã hoàn thành" id="admin-language6"
                        @(Model.Status == "Đã hoàn thành" ? "checked" : "")
                        @(Model.Status == "Trả hàng" ? "disabled" : "")>
                        <label for="admin-language6"><span class="body-title-2">Hoàn thành</span></label>
                    </div>
                }
                @if(Model.Status == "Trả hàng")
                {
                    <div class="item">
                        <button class="btn btn-primary" onclick="DetailReturnRefund(@Model.ReturnId)">Chi tiết trả hàng</button>
                    </div>
                }
            </div>

        </div>
    </div>
</div>

<div class="modal fade" id="returnRefund" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-style">
        <div class="modal-content modal-content-style">
            <div class="modal-content">
                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Trả hàng</h4>
                    <button type="button" class="close" data-dismiss="modal" style="font-size:20px; background: none; border: none" onclick="CloseReasonRefund()">&times;</button>
                </div>
                <!-- Modal Body -->
                <div class="modal-body">
                    <div class="" style="    border: 1px solid #aaaa">
                        <fieldset name="upload image">
                            <div class="body-title mb-10">Tải ảnh lên <span class="tf-color-1">*</span></div>
                            <div class="upload-image mb-10">
                                <div class="item up-load">
                                    <label class="uploadfile" for="image">
                                        <span class="icon">
                                            <i class="icon-upload-cloud"></i>
                                        </span>
                                        <span class="text-tiny">Thả hình ảnh sản phẩm lỗi của bạn vào đây <span class="tf-color">chọn đường dẫn</span></span>
                                        <input type="file" id="image" accept="image/*" onchange="uploadImages(event)" multiple>
                                    </label>
                                </div>
                            </div>
                            <span id="error-images" class="text-danger"></span>
                        </fieldset>
                        <fieldset>
                            <div id="preview-image" class="upload-image">
                            </div>
                        </fieldset>
                    </div>
                    <div class="" style="padding-top: 10px">
                        <label for="reasonReturn">Lý do trả hàng</label>
                        <textarea id="reasonReturn" style="width: 100%"></textarea>
                    </div>
                    <div class="">
                        <button type="button" class="btn btn-secondary" onclick="CloseReasonRefund()">Hủy</button>
                        <button type="button" class="btn btn-primary" onclick="SendReturnRefund()">Lưu</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="detailRefund" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-dialog-style">
        <div class="modal-content modal-content-style" style="box-shadow: 10px 10px 20px #aaaaaa;border: 1px solid black">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" style="padding: 10px 20px 0px;">
                <div class="form-add-product">
                    <div class="wg-box">
                        <input type="hidden" value="@Model.ReturnId" id="returnID" />
                        <fieldset>
                            <label class="body-title mb-10"><strong>Hình ảnh sản phẩm</strong></label>
                            <div id="img_product_return" style="max-height: 525px; overflow-x: auto; white-space: nowrap;"></div>
                        </fieldset>
                        <fieldset>
                            <label class="body-title mb-10"><strong>Lý do trả hàng</strong></label>
                            <textarea id="reasonRefund" disabled style="width:100%"></textarea>
                        </fieldset>
                        <fieldset class="name">
                            <label class="body-title mb-10"><strong>Trạng thái phản hồi trả hàng</strong></label>
                            <select id="selectStatusReturn" disabled>
                                <option value="" selected>Chưa phản hồi</option>
                                <option value="Xác nhận trả hàng" >Xác nhận trả hàng</option>
                                <option value="Từ chối trả hàng">Từ chối trả hàng</option>
                            </select>
                        </fieldset>
                        <fieldset>
                            <label class="body-title mb-10"><strong>Phản hồi trả hàng</strong></label>
                            <textarea id="responseReturn" style="width:100%" disabled></textarea>
                        </fieldset>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="tf-button style-1" onclick="detailReturnRefundCancel()">Thoát</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>

    var numberViewProduct = 1;

    var returnRefund = {
        orderId: 0,
        reasonReturn: "",
        images: [],
    };


    function AddViewItem() {
        if ($('#selectViewItem').text() === "Rút gọn") {
            for (let i = 1; i <= @index; i++) {
                $('#display_product_' + i).css({ 'display': 'none' });
            }
            numberViewProduct = 1;
            $('#selectViewItem').text("Xem thêm");
        } else {
            if (numberViewProduct > @index) {
                for (let i = @index; i > 2; i--) {
                    if (numberViewProduct === @index) {
                        break;
                    }
                    $('#display_product_' + i).css({ 'display': 'none' });
                    numberViewProduct -= 1;
                }
                $('#selectViewItem').text("Xem thêm");
            } else {
                const viewProductMin = Math.min(@index - numberViewProduct, 3);
                for (let i = 0; i < viewProductMin; i++) {
                    numberViewProduct += 1;
                    $('#display_product_' + numberViewProduct).css({ 'display': '' });
                }
                if (numberViewProduct >= @index) {
                    $('#selectViewItem').text("Rút gọn");
                }
            }
        }
    }

    function CloseDetail() {
        $('#orderDetail').modal('hide');
    }
    function CloseReasonRefund() {
        $('#orderDetail').modal('show');
        $('#admin-language2').prop("checked", true);
        $('#admin-language5').prop("checked", false);
        $('#returnRefund').modal('hide');
        $('#modal-body-orderDetail').css('opacity', '1');
        $('#modal-header-style').css('opacity', '1');

    }

    //Event cancel detail return refund
    function detailReturnRefundCancel() {
        $('#detailRefund').modal('hide');
        $('#modal-body-orderDetail').css('opacity', '1');
        $('#modal-header-style').css('opacity', '1');
    }

    //Event click radio status of order
    var radios = document.querySelectorAll('input[name="admin-language"]');
    radios.forEach(function (radio) {
        let radioChecked = document.querySelector('input[name="admin-language"]:checked').value;
        radio.addEventListener('click', function () {
            console.log('radiochecked: ' + radioChecked);
            let orderId = $('#orderId').val();
            console.log("orderID: " + orderId);
            if (!radio.disabled) {
                if (radio.value == "Đã hủy") {
                    var result = confirm("Bạn có chắc muốn hủy đơn hàng này!");
                    if (result) {
                        UpdateStatusOrder(orderId, radio.value);
                        $('#status_' + orderId).html(radio.value);
                    } else {
                        if (radioChecked == "Chờ xác nhận") {
                            $('#admin-language1').prop("checked", true);
                            $('#admin-language7').prop("checked", false);
                        } else if (radioChecked == "Chờ lấy hàng") {
                            $('#admin-language2').prop("checked", true);
                            $('#admin-language7').prop("checked", false);
                        }
                    }
                }
                if (radio.value == "Đã hoàn thành") {
                    var result = confirm("Bạn có chắc muốn hoàn thành đơn hàng (sau khi hoàn thành đơn hàng bạn sẽ không thể trả hàng)");

                    if (result) {
                        UpdateStatusOrder(orderId, radio.value);
                        $('#admin-language6').prop("checked", true);
                        $('#admin-language4').prop("checked", false);
                        $('#admin-language5').prop("checked", false);
                        $('#admin-language5').prop("disabled", true);
                        $('#admin-language6').prop("disabled", true);
                        // $('#radio-button-' + orderId).empty();
                        $('#status_' + orderId).html(radio.value);
                    } else {
                        $('#admin-language4').prop("checked", true);
                        $('#admin-language6').prop("checked", false);
                    }
                }
                if (radio.value == "Trả hàng") {
                    var statusOrder = $('#statusOrder').val();
                    if (statusOrder != "Trả hàng") {
                        console.log('dateOrder: ' + $('#orderDateTime').val());

                        var orderDate = new Date($('#orderDateTime').val());
                        console.log("orderDate: " + orderDate);
                        var currentDate = new Date();

                        // Calculate the difference in time
                        var timeDiff = currentDate.getTime() - orderDate.getTime();
                        console.log("timeDiff: " + timeDiff);
                        // Convert time difference to days
                        var dayDiff = Math.floor(timeDiff / (1000 * 3600 * 24));
                        console.log('dayDiff: ' + dayDiff);
                        // Check if the difference is greater than 3 days
                        if (dayDiff > 3) {
                            alert("Yêu cầu trả hàng chỉ có thể thực hiện trong vòng 3 ngày kể từ ngày đặt hàng.");
                            $('#admin-language2').prop("checked", true);
                            $('#admin-language5').prop("checked", false);
                            return;
                        }
                        $('#returnRefund').modal('show');
                        $('#modal-body-orderDetail').css('opacity', '0.2');
                        $('#modal-header-style').css('opacity', '0.2');
                    } else {
                        $('#detailRefund').modal('show');
                    }
                }
            }
        });
    });

    //View detail return refund
    function DetailReturnRefund(returnId) {
        $('#modal-body-orderDetail').css('opacity', '0.2');
        $('#modal-header-style').css('opacity', '0.2');
        $('#detailRefund').modal('show');

        console.log('returnId:', returnId);

        if (!returnId) { // This check covers both `null` and `0`
            alert("Không có thông tin trả hàng!");
            return;
        }

        $.ajax({
            url: '/employee/order/detailRefund',
            type: 'post',
            data: { returnId: returnId },
            success: function (response) {
                $('#detailRefund').modal('show');
                $('#reasonRefund').val(response.reasonReturn);
                console.log('reason: ' + response.reasonReturn);
                var html = LoadImg(response.images);
                $('#img_product_return').html(html);
                if (response.responseContent != null && response.statusReturn != "Yêu cầu trả hàng") {
                    $('#responseReturn').val(response.responseContent);
                    $('#selectStatusReturn').val(response.statusReturn);
                    $('#UpdateRefundButton').prop('disabled', true);
                    $('#responseReturn').prop('disabled', true);
                    $('#UpdateRefundButton').hide();
                }
                console.log("ly do: " + response.statusReturn);
                console.log("thanh cong");
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
    }

    //Load image detail return refund
    function LoadImg(imgs) {
        var html = "";
        imgs.forEach(function (item) {
            html += `<img src="${item}" alt="Product Image" style="height:180px"/>`;
            // console.log(item);
        });
        return html; // Ensure the HTML is returned
    }

    //Update status for order
    function UpdateStatusOrder(orderId, status) {
        $.ajax({
            url: '/account/UpdateStatusOrder',
            type: 'post',
            contentType: 'application/x-www-form-urlencoded',  // Đặt header Content-Type
            data: $.param({ orderId: orderId, status: status }),
            success: function (response) {
                if (response.success == true) {
                    alert("Cập nhật trạng thái đơn hàng thành công");
                }
            },
            error: function (xhr, status, error) {
                console.log(error);
            }

        });
    }

    //Send required return refund
    function SendReturnRefund() {


        var imgs = returnRefund.images;
        if (imgs.length == 0) {
            alert("Vui lòng gửi hình ảnh để có thể yêu cầu trả hàng!");
            return;
        }
        var reason_Return = $('#reasonReturn').val();
        if (reason_Return == '') {
            alert("Vui lòng nhập lý do trả hàng để có thể gửi yêu cầu trả hàng!");
            return;
        }
        console.log("Reason: " + reason_Return);
        returnRefund.reasonReturn = $('#reasonReturn').val();
        let orderID = $('#orderId').val();
        console.log("orderID: " + orderID);
        returnRefund.orderId = orderID;
        $.ajax({
            url: '/account/ReturnRefund',
            type: 'post',
            data: { returnRefund: returnRefund },
            success: function (response) {
                $('#status_' + orderID).html("Trả hàng");
                $('#returnRefund').modal('hide');
                alert("Gửi thông tin trả hàng thành công. Chúng tôi sẽ liên hệ lại với bạn sớm nhât.");
                $('#modal-body-orderDetail').css('opacity', '1');
                $('#modal-header-style').css('opacity', '1');
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
    }

    function previewImage(event) {
        isUploadFile = true;
        var files = event.target.files;
        var file = files[0];
        console.log(file.type)
        const validImageTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/jpg'];
        if (!validImageTypes.includes(file.type)) {
            alert('Vui lòng tải lên một tệp hình ảnh hợp lệ (JPEG, PNG, GIF, JPG).')
            return false;
        }
        var uploadImage = $('#upload-image');
        var previewImage = $('#preview-image');
        previewImage.empty();
        uploadImage.addClass('hidden');
        removeImageSelect();
        for (var i = 0; i < files.length; i++) {
            var file = files[i];
            var reader = new FileReader();

            reader.onload = (function (file) {
                return function (e) {
                    var imageContainer = $('<div>', {
                        class: 'item select-image',
                        style: 'position: relative; max-width: 100%; border-radius: 2px;',
                        click: function () {
                            selectImage(this)
                        }
                    });

                    var img = $('<img>', {
                        src: e.target.result
                    });

                    var deleteBtn = $('<button>', {
                        class: 'delete-icon',
                        html: '<i class="icon-delete"></i>',
                        click: function () {
                            uploadImage.removeClass('hidden');
                            imageContainer.remove();
                        }
                    });

                    imageContainer.append(img);
                    imageContainer.append(deleteBtn);
                    previewImage.append(imageContainer);
                };
            })(file);

            reader.readAsDataURL(file);
        }
    }

    function addImageToList(src) {
        var listImage = $('#list-image');
        var isExists = false;
        listImage.find('div').each(function () {
            var image = $(this).find('img').attr('src');
            if (image == src) {
                isExists = true;
                return false;
            }
        });
        if (!isExists) {
            var imageContainer = $('<div>', {
                class: 'item',
                style: 'position: relative; max-width: 25%; min-width: 25%; border-radius: 2px;',
                click: function () {
                    selectImage(this)
                }
            });

            var img = $('<img>', {
                src: src
            });

            imageContainer.append(img);
            listImage.append(imageContainer);
        }
    }

    function selectImage(image) {
        removeImageSelect()
        $(image).addClass('select-image');
    }

    function removeImageSelect() {
        var images = $('#list-image').children();
        for (var i = 0; i < images.length; i++) {
            $(images[i]).removeClass('select-image');
        }

        images = $('#preview-image').children();
        if (images.length > 0) {
            $(images[0]).removeClass('select-image');
        }
    }

    function uploadImages(event) {
        let files = event.target.files;
        let previewContainer = document.getElementById('preview-image');

        for (let file of files) {
            let div = document.createElement('div');
            div.className = 'item';

            let reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = function (e) {
                let img = document.createElement('img');
                img.src = e.target.result;
                img.alt = file.name;
                img.style.position = 'relative'

                div.appendChild(img);

                let removeBtn = document.createElement('button');
                removeBtn.className = 'btn-remove';
                removeBtn.innerHTML = '<i class="bi bi-x"></i>';
                removeBtn.onclick = function () {
                    previewContainer.removeChild(div);
                    updateListImage();
                    $("#image").val('');
                }

                div.appendChild(removeBtn);
                previewContainer.appendChild(div);

                updateListImage();
            }
        }
    }

    function updateListImage() {
        let previewContainer = document.getElementById('preview-image');
        let images = previewContainer.getElementsByTagName('img');
        let imageList = [];

        for (let image of images) {
            imageList.push(image.src);
        }

        returnRefund.images = imageList;
    }

    function CloseReasonRefund() {
        // Đóng popup hiện tại
        $('#returnRefund').modal('hide');
        $('#admin-language4').prop("checked", true);
        $('#admin-language5').prop("checked", false);
        // Mở popup sau
        $('#orderDetail').modal('show');
        $('#modal-body-orderDetail').css('opacity', '1');
        $('#modal-header-style').css('opacity', '1');
    }
</script>
